{"version":3,"file":"static/js/142.4b0d9ced.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const SearchList = styled.ul`\n    padding: 0px;\n    margin: 0px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    flex-direction: row;\n}\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  color: blue;\n  justify-content: space-between;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n`;\n\nexport const Button = styled.button`\nfont-size: 12px;\nwidth: 96px;\nheight: 24px;\nbackground-color: white;\nborder: 1px solid gray;\nborder-radius: 5px;\ncursor: pointer;\n&:hover, &:focus {\n  border-color: red;\n  color: red;\n}\n`;\n\n","import PropTypes from 'prop-types';\nimport {\n  SearchList,\n  ContactItem,\n  Text,\n  Button,\n} from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactListItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactItem key={id}>\n      <SearchList>\n        <Text>{name}:</Text>\n        <Text>{phone}</Text>\n      </SearchList>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useSelector } from 'react-redux';\nimport ContactListItem from 'components/ContactListItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  \n\n \n  return (\n    <>\n      <ul>\n        {contacts.map(({ id, name, phone }) => {\n          return (\n            <ContactListItem key={id} id={id} name={name} phone={phone} />\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\n// export default ContactList;\n","import styled from '@emotion/styled';\n\n\nexport const FormStyle = styled.div`\nmargin: 0px;\ncolor: gray;\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\ngap: 16px;\npadding: 20px;\nborder: 1px solid gray;\nborder-radius: 5px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n`;\n\nexport const Button = styled.button`\nwidth: 96px;\nheight: 24px;\nbackground-color: white;\nborder: 1px solid gray;\nborder-radius: 5px;\ncursor: pointer;\n&:hover, &:focus {\n  border-color: green;\n  color: green;\n}\n`;\n","import { useState } from 'react';\nimport { FormStyle, Label, Input, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.name.value;\n    const phone = event.currentTarget.elements.phone.value;\n\n    const newContact = contacts.find(contact => contact.name === name);\n\n    if (newContact) {\n      alert(`${name}is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, phone }));\n\n    reset();\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <FormStyle>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required=\"Name required\"\n            />\n          </Label>\n\n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"phone\"\n              value={phone}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required=\"Phone number required\"\n            />\n          </Label>\n\n          <Button type=\"submit\">Add contact</Button>\n        </FormStyle>\n      </form>\n    </>\n  );\n};\n\n// export default ContactForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["SearchList","styled","ContactItem","Text","Button","id","name","phone","dispatch","useDispatch","type","onClick","deleteContact","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","normalizedFilter","toLowerCase","contact","includes","ContactList","useSelector","map","FormStyle","Label","Input","ContactForm","useState","setName","setPhone","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","elements","find","alert","addContact","onChange","pattern","title","required","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}